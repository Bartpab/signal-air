defmodule SignalAirWeb.Surveillance.ExploitantLiveTest do
    use SignalAirWeb.LiveViewConnCase
    
    @nouveau_signalement %{
      long: 0.0, 
      lat: 0.0, 
      type: "nuisance_olfactive", 
      id: "sig123",
      odeur: %{
        type: "Une odeur", 
        intensite: 3
      },
      cree_le: "29/12/2021 14:14:14"
    }
    
    setup do
      SignalAirWeb.Endpoint.subscribe("global")
    end

    test "nouveau signalement re√ßu", %{conn: conn} do
        conn = get(conn, Routes.live_path(conn, SignalAirWeb.Surveillance.ExploitantLive))
        assert html_response(conn, 200)
      
        {:ok, view, _html} = live(conn)
        SignalAirWeb.Endpoint.broadcast("global", "nouveau_signalement", @nouveau_signalement)
        
        # Simulate an event to get the result of the broadcast
        assert render_hook(view, :foo) =~ "id=\"signalement_sig123\""
      end
end
  