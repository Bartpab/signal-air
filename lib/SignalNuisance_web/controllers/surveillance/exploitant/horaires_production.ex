defmodule SignalNuisanceWeb.Surveillance.Exploitant.HorairesProductionLive do
    use SignalNuisanceWeb, :live_view
    alias SignalNuisance.Signalement
    alias SignalNuisance.Entreprise
    alias SignalNuisance.HoraireProduction
    alias Phoenix.LiveView.JS

    def mount(%{"slug" => slug} = _params, %{"client" => client} = _session, socket) do
      if connected?(socket) do
        Phoenix.PubSub.subscribe(SignalNuisance.PubSub, "global")
      end

      [entreprise] = Entreprise.liste(ou: [slug: slug])

      {:ok, socket
        |> assign(:entreprise, entreprise)
        |> assign(:client, client |> Map.put(:as, SignalNuisance.Model.global_id(entreprise)))
        |> mettre_a_jour_horaires_production
      }
    end

    def mettre_a_jour_horaires_production(%{assigns: %{entreprise: entreprise}} = socket) do
      socket |> assign(:horaires, HoraireProduction.liste(ou: [entreprise_id: entreprise.id]))
    end

    def handle_info(msg, %{assigns: %{entreprise: entreprise}} = socket) do
      entreprise_id = entreprise.id
      case msg do
        %Phoenix.Socket.Broadcast {
          topic: "global",
          event: "modification",
          payload: {HoraireProduction, _, _}
        } ->
            {:noreply,
              socket
              |> mettre_a_jour_horaires_production
            }
        %Phoenix.Socket.Broadcast {
            topic: "global",
            event: "nouveau",
            payload: {HoraireProduction, _}
            } ->
                {:noreply,
                socket
                |> mettre_a_jour_horaires_production
                }
        _ -> {:noreply, socket}
      end
    end

    def handle_event(event, _params, socket) do
      case event do
        _ -> {:noreply, socket}
      end
    end


    def render(assigns) do
      ~H"""
      <div class="row">
      <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
        <div class="position-sticky pt-3">
          <ul class="nav flex-column">
            <li class="nav-item">
                <%= link "Tableau de bord", to: Routes.live_path(@socket, SignalNuisanceWeb.Surveillance.Exploitant.DashboardLive, @entreprise.slug), class: "nav-link" %>
            </li>
            <li class="nav-item active">
                <%= link "Horaires de production", to: Routes.live_path(@socket, SignalNuisanceWeb.Surveillance.Exploitant.HorairesProductionLive, @entreprise.slug), class: "nav-link" %>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                Signalements en cours
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                Tous les signalements
              </a>
            </li>
          </ul>
        </div>
      </nav>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="my-3 p-3 bg-body rounded shadow-sm">
                <h1><%= gettext "Horaires de production %{name}", name: @entreprise.name %></h1>
                <hr/>
                <table class="table">
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Début</th>
                        <th scope="col">Fin</th>
                        <th scope="col">Durée</th>
                    </tr>
                    </thead>
                    <tbody>
                    <%= for horaire <- @horaires do %>
                        <tr>
                            <th scope="row"><%= horaire.id %></th>
                            <td><%= horaire.commence_le |> Timex.format!("%d/%m/%Y %H:%M:%S", :strftime) %></td>
                            <td><%= if horaire.termine_le != nil, do: horaire.termine_le |> Timex.format!("%d/%m/%Y %H:%M:%S", :strftime), else: "En cours" %></td>
                            <td><%= if horaire.termine_le != nil, do: Timex.diff(horaire.termine_le, horaire.commence_le, :duration)  |> Timex.format_duration(:humanized), else: "En cours" %></td>

                        </tr>
                    <% end %>
                    </tbody>
                </table>
            </div>
        </main>
       </div>
      """
    end
end
