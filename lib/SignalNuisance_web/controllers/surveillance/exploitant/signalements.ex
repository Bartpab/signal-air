defmodule SignalNuisanceWeb.Surveillance.Exploitant.DashboardLive.Signalements do
    use Phoenix.LiveComponent

    def mount(socket) do
        {:ok, 
            socket 
            |> assign(:afficher_commentaires, true)
        }
    end  

    def handle_event("cloturer", _, %{assigns: %{client: client, signalement: signalement}} = socket) do
        SignalNuisance.Signalement.cloturer(signalement)
        {:noreply, socket}
      end
      def render(assigns) do
        ~H"""
        <div>
        <%= if Enum.empty?(@signalements) do %>
            <div class="d-flex text-muted pt-3">
            Aucun signalement...
            </div>
        <% end %>
        <table class="table">
            <tbody>
                <%= for signalement <- @signalements do %>
                    <tr>
                        <td>
                            <%= signalement.id %>
                        </td>
                        <td>
                            <%= case signalement.stype do
                            "nuisance_olfactive" -> "Olfactive"
                            _ -> "Nuisance"
                            end
                            %>
                        </td>
                        <td>
                            <%= case signalement.stype do
                            "nuisance_olfactive" -> "#{signalement.type} - #{signalement.intensite} / 3 "
                            _ -> "Nuisance"
                            end %>
                        </td>
                        <td>
                            <%= signalement.cree_le |> Timex.from_now %>
                        </td>
                        <td></td>
                    </tr>
                    <%= if @afficher_commentaires do %>
                        <tr >
                        <td colspan="5">
                            <%= live_render @socket, SignalNuisance.Commentaire.ListeLive, id: "commentaires_#{SignalNuisance.Model.global_id(signalement)}", 
                                session: %{
                                    "parent_id" =>  SignalNuisance.Model.global_id(signalement),
                                    "client" => @client
                                } 
                            %>
                            </td>
                        </tr>
                    <% end %>
                <% end %>
            </tbody>
        </table>
        </div>
        """
      end  
end